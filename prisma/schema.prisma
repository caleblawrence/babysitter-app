// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                   Int                  @id @default(autoincrement())
  name                 String
  email                String               @unique
  password             String
  UserFriends          UserFriend[]         @relation("user")
  Friends              UserFriend[]         @relation("friend")
  RequestedFriends     UserFriendRequests[] @relation("requestedUser")
  UserFriendRequests   UserFriendRequests[] @relation("sentByUser")
  Opportunity          Opportunity[]        @relation("babySitter")
  RequestedOppertunity Opportunity[]        @relation("requestedByUser")
  Notifications        Notification[]       @relation("notifications")
}

model UserFriend {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation("user", fields: [userId], references: [id])
  friendId  Int
  friend    User     @relation("friend", fields: [friendId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@unique([userId, friendId], name: "user_friend_unique_constraint")
}

model UserFriendRequests {
  id              Int      @id @default(autoincrement())
  sentByUserId    Int
  sentByUser      User     @relation("sentByUser", fields: [sentByUserId], references: [id])
  requestedUserId Int
  requestedUser   User     @relation("requestedUser", fields: [requestedUserId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())

  @@unique([sentByUserId, requestedUserId], name: "sentByUser_requestedUser_unique_constraint")
}

model Opportunity {
  id                Int      @id @default(autoincrement())
  date              DateTime
  notes             String?
  requestedByUserId Int
  requestedByUser   User     @relation("requestedByUser", fields: [requestedByUserId], references: [id])
  babysitterId      Int?
  babySitter        User?    @relation("babySitter", fields: [babysitterId], references: [id])
  createdAt         DateTime @default(now())
  updatedAt         DateTime @default(now())

  @@unique([date, requestedByUserId], name: "date_requestedByUserId_unique_constraint")
}

model Notification {
  id        Int      @id @default(autoincrement())
  message   String
  link      String?
  userId    Int?
  User      User?    @relation("notifications", fields: [userId], references: [id])
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
